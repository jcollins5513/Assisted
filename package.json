{
  "name": "car-sales-ai-assistant",
  "version": "1.0.0",
  "description": "AI-powered car sales assistant with voice recognition and content generation",
  "main": "index.js",
  "scripts": {
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:backend": "cd backend && npm run dev",
    "dev:frontend": "cd frontend && npm run dev",
    "build": "npm run build:backend && npm run build:frontend",
    "build:backend": "cd backend && npm run build",
    "build:frontend": "cd frontend && npm run build",
    "start": "concurrently \"npm run start:backend\" \"npm run start:frontend\"",
    "start:backend": "cd backend && npm start",
    "start:frontend": "cd frontend && npm start",
    "test": "npm run test:backend && npm run test:frontend",
    "test:backend": "cd backend && npm test",
    "test:frontend": "cd frontend && npm test",
    "test:watch": "concurrently \"npm run test:backend:watch\" \"npm run test:frontend:watch\"",
    "test:backend:watch": "cd backend && npm run test:watch",
    "test:frontend:watch": "cd frontend && npm run test:watch",
    "test:coverage": "npm run test:backend:coverage && npm run test:frontend:coverage",
    "test:backend:coverage": "cd backend && npm run test:coverage",
    "test:frontend:coverage": "cd frontend && npm run test:coverage",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:debug": "playwright test --debug",
    "test:all": "npm run test && npm run test:e2e",
    "lint": "npm run lint:backend && npm run lint:frontend",
    "lint:backend": "cd backend && npm run lint",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:fix": "npm run lint:backend:fix && npm run lint:frontend:fix",
    "lint:backend:fix": "cd backend && npm run lint:fix",
    "lint:frontend:fix": "cd frontend && npm run lint:fix",
    "type-check": "npm run type-check:backend && npm run type-check:frontend",
    "type-check:backend": "cd backend && npm run type-check",
    "type-check:frontend": "cd frontend && npm run type-check",
    "install:all": "npm install && cd backend && npm install && cd ../frontend && npm install",
    "clean": "npm run clean:backend && npm run clean:frontend",
    "clean:backend": "cd backend && npm run clean",
    "clean:frontend": "cd frontend && npm run clean",
    "reset": "npm run clean && npm run install:all",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:test": "docker-compose -f docker-compose.test.yml up --abort-on-container-exit",
    "db:seed": "cd backend && npm run db:seed",
    "db:migrate": "cd backend && npm run db:migrate",
    "db:reset": "cd backend && npm run db:reset",
    "setup": "npm run install:all && npm run db:migrate && npm run db:seed",
    "postinstall": "playwright install"
  },
  "keywords": [
    "car-sales",
    "ai-assistant",
    "voice-recognition",
    "content-generation",
    "sales-training",
    "react",
    "nodejs",
    "mongodb"
  ],
  "author": "Your Name",
  "license": "MIT",
  "devDependencies": {
    "@playwright/test": "^1.40.0",
    "concurrently": "^8.2.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/car-sales-ai-assistant.git"
  },
  "bugs": {
    "url": "https://github.com/your-username/car-sales-ai-assistant/issues"
  },
  "homepage": "https://github.com/your-username/car-sales-ai-assistant#readme"
}